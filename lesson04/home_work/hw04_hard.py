# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

print("\n    -= Задание 1 =-")
print("Транспонирование матрицы")

print("\nБыло:  ", matrix)
print("Стало: ", list(map(list, zip(*matrix))))

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:

# т. к. искомых последовательностей нет они добавлены в 1, 10 и 15 строке максимальная с 9-кой - в 10-й

print("\n    -= Задание 2 =-")
print("Поиск пяти последовательных цифр")

number = """
73167123456730624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556023456789586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881           
16427171479924442928230863465674813919123162824586
17866458359124566529476545682812345678942607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

new_number = ""
digits = "0123456789"
for symbol in number:
    if symbol in digits:
        new_number = new_number + symbol

print(number, '\n')
print(new_number)

sequence = '0'
max_sequence = '0'
index_max = 0
i = 0
while i <= 999:

    if int(new_number[i]) == int(new_number[i - 1]) + 1:
        sequence = sequence + new_number[i]
    else:
        if len(sequence) >= 5:
            if int(max_sequence[-1]) < int(sequence[-1]):
                max_sequence = sequence[-5:]
                print(max_sequence)
                index_max = i - 5
            if sequence[-1] == '9':
                break
        sequence = new_number[i]
    i += 1

print(f"Смещение: {index_max}, последовательность: {max_sequence}")

# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

print("\n    -= Задание 1 =-")
print("Расстановка ферзей")

queens = [[0, 1],
          [5, 3],
          [7, 1],
          [2, 0],
          [6, 2],
          [3, 4],
          [1, 7],
          [4, 5]]

i = 0
chek = False
while i < 7:
    j = i + 1
    while j <= 7:
        q1 = queens[i]          
        q2 = queens[j]
        if q1[0] + q1[1] == q2[0] + q2[1] or q1[0] == q2[0] \
                or q1[1] == q2[1] or abs(q1[0] - q1[1]) == abs(q2[0] - q2[1]):
            chek = True
            break
        j += 1
        # 1-е условие на одной диагонали параллельной вспомогательной
        # 2-е условие на одной горизонтали или вертикали
        # 3-е условие на одной диагонали параллельной главной
    i += 1

print("Ферзи: ", queens)
print("YES" if chek else "NO")
